{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "GLSL",
	"patterns": [
		{
			"name": "comment.block.glsl",
			"begin": "\\/\\*",
			"end": "\\*\\/"
		},
		{
			"name": "comment.line.double-slash.glsl",
			"begin": "//",
			"end": "$"
		},
		{
			"name": "meta.preprocessor.glsl",
			"match": "#([a-zA-Z0-9_+\\-*<>%|&?.:;,~!^=\\s]|(\\/(?!\\*)))*"
		},
		{
			"name": "keyword.operator.glsl",
			"match": "\\+\\+|--|\\+|-|~|!|\\*|\/|%|<<|>>|<|>|<=|>=|==|!=|&|\\^|\\||&&|\\^\\^|\\|\\||=|\\+=|-=|\\*=|\/=|%=|<<=|>>=|&=|\\^=|\\|="
		},
		{
			"name": "constant.numeric.glsl",
			"match": "\\b(((\\d+\\.\\d+)|(\\d+\\.)|(\\.\\d+))([eE][+-]?\\d+)?|\\d+([eE][+-]?\\d+))[fF]?\\b"
		},
		{
			"name": "constant.numeric.glsl",
			"match": "\\b([1-9]\\d*|0[0-7]*|0[xX](\\d|[a-fA-F])+)[uU]?\\b"
		},
		{
			"name": "constant.language.glsl",
			"match": "\\b(true|false)\\b"
		},
		{
			"name": "storage.modifier.glsl",
			"match": "\\b(attribute|varying|const|uniform|layout|centroid|flat|smooth|in|out|inout|invariant|lowp|mediump|highp|precision)\\b"
		},
		{
			"name": "keyword.control.glsl",
			"match": "\\b(discard|return|break|continue|do|for|while|switch|case|default|if|else)\\b"
		},
		{
			"match": "(struct)(\\s+)([_a-zA-Z][_a-zA-Z0-9]*)",
			"captures": {
				"1": {
					"name": "storage.type.glsl"
				},
				"3": {
					"name": "entity.name.type.glsl"
				}
			}
		},
		{
			"begin": "([_a-zA-Z][_a-zA-Z0-9]*)(\\s+)([_a-zA-Z][_a-zA-Z0-9]*)\\(",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"match": "\\b(void|float|int|bool|mat2|mat3|mat4|mat2x2|mat2x3|mat2x4|mat3x2|mat3x3|mat3x4|mat4x2|mat4x3|mat4x4|vec2|vec3|vec4|ivec2|ivec3|ivec4|bvec2|bvec3|bvec4|uint|uvec2|uvec3|uvec4|sampler2D|sampler3D|samplerCube|sampler2DShadow|samplerCubeShadow|sampler2DArray|sampler2DArrayShadow|isampler2D|isampler3D|isamplerCube|isampler2DArray|usampler2D|usampler3D|usamplerCube|usampler2DArray)\\b",
							"name": "storage.type.glsl"
						},
						{
							"match": "\\b[_a-zA-Z][_a-zA-Z0-9]*\\b",
							"name": "entity.name.type.glsl"
						}
					]
				},
				"3": {
					"name": "entity.name.function.glsl"
				}
			},
			"end": "\\)",
			"patterns": [
				{
					"match": "(struct)(\\s+)([_a-zA-Z][_a-zA-Z0-9]*)(\\s*{.*?}\\s*)([_a-zA-Z][_a-zA-Z0-9]*)?",
					"captures": {
						"1": {
							"name": "storage.type.glsl"
						},
						"3": {
							"name": "entity.name.type.glsl"
						},
						"4": {
							"patterns": [
								{
									"include": "$self"
								}
							]
						},
						"5": {
							"name": "variable.glsl"
						}
					}
				},
				{
					"name": "storage.modifier.glsl",
					"match": "\\b(attribute|varying|const|uniform|layout|centroid|flat|smooth|in|out|inout|invariant|lowp|mediump|highp|precision)\\b"
				},
				{
					"match": "(\\w+)(\\s*\\[.*?\\]\\s*)*(\\s*\\w+)*",
					"captures": {
						"1": {
							"patterns": [
								{
									"match": "(void|float|int|bool|mat2|mat3|mat4|mat2x2|mat2x3|mat2x4|mat3x2|mat3x3|mat3x4|mat4x2|mat4x3|mat4x4|vec2|vec3|vec4|ivec2|ivec3|ivec4|bvec2|bvec3|bvec4|uint|uvec2|uvec3|uvec4|sampler2D|sampler3D|samplerCube|sampler2DShadow|samplerCubeShadow|sampler2DArray|sampler2DArrayShadow|isampler2D|isampler3D|isamplerCube|isampler2DArray|usampler2D|usampler3D|usamplerCube|usampler2DArray)",
									"name": "storage.type.glsl"
								},
								{
									"match": "\\w+",
									"name": "entity.name.type"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "$self"
								}
							]
						},
						"3": {
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					}
				}
			]
		},
		{
			"begin": "([_a-zA-Z][_a-zA-Z0-9]*)\\(",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.glsl"
				}
			},
			"applyEndPatternLast": 1,
			"end": "\\)",
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"name": "storage.type.glsl",
			"match": "\\b(struct|void|float|int|bool|mat2|mat3|mat4|mat2x2|mat2x3|mat2x4|mat3x2|mat3x3|mat3x4|mat4x2|mat4x3|mat4x4|vec2|vec3|vec4|ivec2|ivec3|ivec4|bvec2|bvec3|bvec4|uint|uvec2|uvec3|uvec4|sampler2D|sampler3D|samplerCube|sampler2DShadow|samplerCubeShadow|sampler2DArray|sampler2DArrayShadow|isampler2D|isampler3D|isamplerCube|isampler2DArray|usampler2D|usampler3D|usamplerCube|usampler2DArray)\\b"
		},
		{
			"name": "variable.language.glsl",
			"match": "\\b(gl_.*?)\\b"
		},
		{
			"match": "([_a-zA-Z][_a-zA-Z0-9]*)((\\s+)|(\\s*\\[.*?\\]\\s*)+)([_a-zA-Z][_a-zA-Z0-9]*)",
			"captures": {
				"1": {
					"name": "entity.name.type.glsl"
				},
				"2": {
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				"5": {
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			}
		},
		{
			"match": "\\w",
			"name": "variable.glsl"
		}
	],
	"scopeName": "source.glsl"
}